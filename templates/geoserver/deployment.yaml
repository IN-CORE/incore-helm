{{- if .Values.geoserver.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "incore.fullname" . }}-geoserver
  labels:
    {{- include "incore.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.geoserver.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "incore.name" . }}-geoserver
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "incore.name" . }}-geoserver
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: geoserver
          image: "{{ .Values.geoserver.image.repository }}:{{ .Values.geoserver.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GEOSERVER_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "incore.fullname" . }}-services
                  key: GEOSERVER_USER
            - name: GEOSERVER_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "incore.fullname" . }}-services
                  key: GEOSERVER_PW
            - name: GEOSERVER_CSRF_WHITELIST
              value: {{ .Values.geoserver.whitelist }}
            - name: EXTRA_JAVA_OPTS
              value: {{ .Values.geoserver.envs.extraJavaOpts | quote }}
          ports:
            - containerPort: 8080
              name: geoserver
          volumeMounts:
            - name: {{ include "incore.name" . }}-geoserver
              mountPath: /opt/geoserver_data
          startupProbe:
            httpGet:
              path: /geoserver/index.html
              port: geoserver
            failureThreshold: 240
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /geoserver/index.html
              port: geoserver
          readinessProbe:
            httpGet:
              path: /geoserver/index.html
              port: geoserver
          resources:
            {{- toYaml .Values.geoserver.resources | nindent 12 }}
      volumes:
        - name: {{ include "incore.name" . }}-geoserver
          persistentVolumeClaim:
            {{- if .Values.geoserver.persistence.existingClaim }}
            claimName: {{ .Values.geoserver.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "incore.name" . }}-geoserver
            {{- end }}
      {{- with .Values.geoserver.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.geoserver.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.geoserver.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
